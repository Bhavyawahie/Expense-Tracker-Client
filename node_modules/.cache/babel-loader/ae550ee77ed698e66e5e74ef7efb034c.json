{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhavya Wahie\\\\Desktop\\\\WEBDPRACTICE\\\\expense-tracker-react\\\\client\\\\src\\\\context\\\\GlobalState.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\";\nimport AppReducer from \"./AppReducer\";\nimport axios from \"axios\"; //Initial State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  transactions: [],\n  error: null,\n  loading: true\n}; // Create Context\n\nexport const GlobalContext = /*#__PURE__*/createContext(initialState); //Provider Component\n\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState); //Actions ----> Make calls to reducer\n\n  async function getTransactions() {\n    try {\n      const res = await axios.get(\"/api/v1/transactions\");\n      dispatch({\n        type: \"GET_TRANSACTIONS\",\n        payload: res.data.data\n      });\n    } catch (err) {\n      dispatch({\n        type: \"TRANSACTION_ERROR\",\n        payload: err.response.data.error\n      });\n    }\n  }\n\n  function deleteTransaction(id) {\n    dispatch({\n      type: \"DELETE_TRANSACTION\",\n      payload: id\n    });\n  }\n\n  function addTransaction(transaction) {\n    dispatch({\n      type: \"ADD_TRANSACTIONS\",\n      payload: transaction\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      transactions: state.transactions,\n      error: state.error,\n      loading: state.loading,\n      getTransactions,\n      deleteTransaction,\n      addTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GlobalProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = GlobalProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"sources":["C:/Users/Bhavya Wahie/Desktop/WEBDPRACTICE/expense-tracker-react/client/src/context/GlobalState.jsx"],"names":["React","createContext","useReducer","AppReducer","axios","initialState","transactions","error","loading","GlobalContext","GlobalProvider","children","state","dispatch","getTransactions","res","get","type","payload","data","err","response","deleteTransaction","id","addTransaction","transaction"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AACA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,YAAY,EAAG,EADE;AAEjBC,EAAAA,KAAK,EAAE,IAFU;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAArB,C,CAMA;;AAEA,OAAO,MAAMC,aAAa,gBAAGR,aAAa,CAACI,YAAD,CAAnC,C,CAEP;;AAEA,OAAO,MAAMK,cAAc,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAkB;AAAA;;AAC5C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,UAAU,CAACC,UAAD,EAAaE,YAAb,CAApC,CAD4C,CAG5C;;AAEA,iBAAeS,eAAf,GAAiC;AAC7B,QAAI;AACA,YAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,sBAAV,CAAlB;AACAH,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,kBADD;AAELC,QAAAA,OAAO,EAAEH,GAAG,CAACI,IAAJ,CAASA;AAFb,OAAD,CAAR;AAIH,KAND,CAOA,OAAOC,GAAP,EAAY;AACRP,MAAAA,QAAQ,CAAC;AACLI,QAAAA,IAAI,EAAE,mBADD;AAELC,QAAAA,OAAO,EAAEE,GAAG,CAACC,QAAJ,CAAaF,IAAb,CAAkBZ;AAFtB,OAAD,CAAR;AAIH;AACJ;;AAED,WAASe,iBAAT,CAA2BC,EAA3B,EAA+B;AAC3BV,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,oBADD;AAELC,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAIH;;AAED,WAASC,cAAT,CAAwBC,WAAxB,EAAqC;AACjCZ,IAAAA,QAAQ,CAAC;AACLI,MAAAA,IAAI,EAAE,kBADD;AAELC,MAAAA,OAAO,EAAEO;AAFJ,KAAD,CAAR;AAIH;;AAED,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EACrB;AACInB,MAAAA,YAAY,EAAEM,KAAK,CAACN,YADxB;AAEAC,MAAAA,KAAK,EAAEK,KAAK,CAACL,KAFb;AAGAC,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAHf;AAIAM,MAAAA,eAJA;AAKAQ,MAAAA,iBALA;AAMAE,MAAAA;AANA,KADR;AAAA,cAUKb;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAjDM;;GAAMD,c;;KAAAA,c","sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\"\r\nimport axios from \"axios\";\r\n//Initial State\r\nconst initialState = {\r\n    transactions : [],\r\n    error: null,\r\n    loading: true\r\n}\r\n\r\n// Create Context\r\n\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\n\r\nexport const GlobalProvider = ( {children} ) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n    \r\n    //Actions ----> Make calls to reducer\r\n\r\n    async function getTransactions() {\r\n        try {\r\n            const res = await axios.get(\"/api/v1/transactions\");\r\n            dispatch({\r\n                type: \"GET_TRANSACTIONS\",\r\n                payload: res.data.data\r\n            });\r\n        }\r\n        catch (err) {\r\n            dispatch({\r\n                type: \"TRANSACTION_ERROR\",\r\n                payload: err.response.data.error\r\n            })\r\n        }\r\n    }\r\n\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: \"DELETE_TRANSACTION\",\r\n            payload: id\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: \"ADD_TRANSACTIONS\",\r\n            payload: transaction\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider value={\r\n                { \r\n                    transactions: state.transactions,\r\n                error: state.error, \r\n                loading: state.loading, \r\n                getTransactions, \r\n                deleteTransaction, \r\n                addTransaction\r\n                }\r\n            }>\r\n            {children}\r\n            </GlobalContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}